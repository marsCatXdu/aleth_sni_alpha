#pragma once
#include <string>
#include <vector>

std::vector<std::string> const c_allTestNames 
{
   "BlockchainTests",
   "BlockchainTests/ValidBlocks",
   "BlockchainTests/ValidBlocks/bcBlockGasLimitTest",
   "BlockchainTests/ValidBlocks/bcExploitTest",
   "BlockchainTests/ValidBlocks/bcForkStressTest",
   "BlockchainTests/ValidBlocks/bcGasPricerTest",
   "BlockchainTests/ValidBlocks/bcMultiChainTest",
   "BlockchainTests/ValidBlocks/bcRandomBlockhashTest",
   "BlockchainTests/ValidBlocks/bcStateTests",
   "BlockchainTests/ValidBlocks/bcTotalDifficultyTest",
   "BlockchainTests/ValidBlocks/bcUncleSpecialTests",
   "BlockchainTests/ValidBlocks/bcUncleTest",
   "BlockchainTests/ValidBlocks/bcValidBlockTest",
   "BlockchainTests/ValidBlocks/bcWalletTest",
   "BlockchainTests/InvalidBlocks",
   "BlockchainTests/InvalidBlocks/bcBlockGasLimitTest",
   "BlockchainTests/InvalidBlocks/bcForgedTest",
   "BlockchainTests/InvalidBlocks/bcInvalidHeaderTest",
   "BlockchainTests/InvalidBlocks/bcMultiChainTest",
   "BlockchainTests/InvalidBlocks/bcUncleHeaderValidity",
   "BlockchainTests/InvalidBlocks/bcUncleSpecialTests",
   "BlockchainTests/InvalidBlocks/bcUncleTest",
   "BlockchainTests/TransitionTests",
   "BlockchainTests/TransitionTests/bcByzantiumToConstantinopleFix",
   "BlockchainTests/TransitionTests/bcEIP158ToByzantium",
   "BlockchainTests/TransitionTests/bcFrontierToHomestead",
   "BlockchainTests/TransitionTests/bcHomesteadToDao",
   "BlockchainTests/TransitionTests/bcHomesteadToEIP150",
   "BCGeneralStateTests",
   "BCGeneralStateTests/stCallCodes",
   "BCGeneralStateTests/stCallCreateCallCodeTest",
   "BCGeneralStateTests/stExample",
   "BCGeneralStateTests/stInitCodeTest",
   "BCGeneralStateTests/stLogTests",
   "BCGeneralStateTests/stMemoryTest",
   "BCGeneralStateTests/stPreCompiledContracts",
   "BCGeneralStateTests/stPreCompiledContracts2",
   "BCGeneralStateTests/stRandom",
   "BCGeneralStateTests/stRandom2",
   "BCGeneralStateTests/stRecursiveCreate",
   "BCGeneralStateTests/stRefundTest",
   "BCGeneralStateTests/stSolidityTest",
   "BCGeneralStateTests/stSpecialTest",
   "BCGeneralStateTests/stSystemOperationsTest",
   "BCGeneralStateTests/stTransactionTest",
   "BCGeneralStateTests/stTransitionTest",
   "BCGeneralStateTests/stWalletTest",
   "BCGeneralStateTests/stCallDelegateCodesCallCodeHomestead",
   "BCGeneralStateTests/stCallDelegateCodesHomestead",
   "BCGeneralStateTests/stHomesteadSpecific",
   "BCGeneralStateTests/stDelegatecallTestHomestead",
   "BCGeneralStateTests/stChangedEIP150",
   "BCGeneralStateTests/stEIP150singleCodeGasPrices",
   "BCGeneralStateTests/stMemExpandingEIP150Calls",
   "BCGeneralStateTests/stEIP150Specific",
   "BCGeneralStateTests/stEIP158Specific",
   "BCGeneralStateTests/stNonZeroCallsTest",
   "BCGeneralStateTests/stZeroCallsTest",
   "BCGeneralStateTests/stZeroCallsRevert",
   "BCGeneralStateTests/stCodeSizeLimit",
   "BCGeneralStateTests/stCreateTest",
   "BCGeneralStateTests/stRevertTest",
   "BCGeneralStateTests/stStackTests",
   "BCGeneralStateTests/stStaticCall",
   "BCGeneralStateTests/stReturnDataTest",
   "BCGeneralStateTests/stZeroKnowledge",
   "BCGeneralStateTests/stZeroKnowledge2",
   "BCGeneralStateTests/stBugs",
   "BCGeneralStateTests/stShift",
   "BCGeneralStateTests/stCreate2",
   "BCGeneralStateTests/stExtCodeHash",
   "BCGeneralStateTests/stSStoreTest",
   "BCGeneralStateTests/stAttackTest",
   "BCGeneralStateTests/stMemoryStressTest",
   "BCGeneralStateTests/stQuadraticComplexityTest",
   "BCGeneralStateTests/stBadOpcode",
   "BCGeneralStateTests/stArgsZeroOneBalance",
   "BCGeneralStateTests/stCodeCopyTest",
   "BCGeneralStateTests/stTimeConsuming",
   "BCGeneralStateTests/stChainId",
   "BCGeneralStateTests/stSLoadTest",
   "BCGeneralStateTests/stSelfBalance",
   "LegacyTests",
   "LegacyTests/Constantinople",
   "LegacyTests/Constantinople/GeneralStateTests",
   "LegacyTests/Constantinople/GeneralStateTests/stCallCodes",
   "LegacyTests/Constantinople/GeneralStateTests/stCallCreateCallCodeTest",
   "LegacyTests/Constantinople/GeneralStateTests/stExample",
   "LegacyTests/Constantinople/GeneralStateTests/stInitCodeTest",
   "LegacyTests/Constantinople/GeneralStateTests/stLogTests",
   "LegacyTests/Constantinople/GeneralStateTests/stMemoryTest",
   "LegacyTests/Constantinople/GeneralStateTests/stPreCompiledContracts",
   "LegacyTests/Constantinople/GeneralStateTests/stPreCompiledContracts2",
   "LegacyTests/Constantinople/GeneralStateTests/stRandom",
   "LegacyTests/Constantinople/GeneralStateTests/stRandom2",
   "LegacyTests/Constantinople/GeneralStateTests/stRecursiveCreate",
   "LegacyTests/Constantinople/GeneralStateTests/stRefundTest",
   "LegacyTests/Constantinople/GeneralStateTests/stSolidityTest",
   "LegacyTests/Constantinople/GeneralStateTests/stSpecialTest",
   "LegacyTests/Constantinople/GeneralStateTests/stSystemOperationsTest",
   "LegacyTests/Constantinople/GeneralStateTests/stTransactionTest",
   "LegacyTests/Constantinople/GeneralStateTests/stTransitionTest",
   "LegacyTests/Constantinople/GeneralStateTests/stWalletTest",
   "LegacyTests/Constantinople/GeneralStateTests/stCallDelegateCodesCallCodeHomestead",
   "LegacyTests/Constantinople/GeneralStateTests/stCallDelegateCodesHomestead",
   "LegacyTests/Constantinople/GeneralStateTests/stHomesteadSpecific",
   "LegacyTests/Constantinople/GeneralStateTests/stDelegatecallTestHomestead",
   "LegacyTests/Constantinople/GeneralStateTests/stChangedEIP150",
   "LegacyTests/Constantinople/GeneralStateTests/stEIP150singleCodeGasPrices",
   "LegacyTests/Constantinople/GeneralStateTests/stMemExpandingEIP150Calls",
   "LegacyTests/Constantinople/GeneralStateTests/stEIP150Specific",
   "LegacyTests/Constantinople/GeneralStateTests/stEIP158Specific",
   "LegacyTests/Constantinople/GeneralStateTests/stNonZeroCallsTest",
   "LegacyTests/Constantinople/GeneralStateTests/stZeroCallsTest",
   "LegacyTests/Constantinople/GeneralStateTests/stZeroCallsRevert",
   "LegacyTests/Constantinople/GeneralStateTests/stCodeSizeLimit",
   "LegacyTests/Constantinople/GeneralStateTests/stCreateTest",
   "LegacyTests/Constantinople/GeneralStateTests/stRevertTest",
   "LegacyTests/Constantinople/GeneralStateTests/stStackTests",
   "LegacyTests/Constantinople/GeneralStateTests/stStaticCall",
   "LegacyTests/Constantinople/GeneralStateTests/stReturnDataTest",
   "LegacyTests/Constantinople/GeneralStateTests/stZeroKnowledge",
   "LegacyTests/Constantinople/GeneralStateTests/stZeroKnowledge2",
   "LegacyTests/Constantinople/GeneralStateTests/stCodeCopyTest",
   "LegacyTests/Constantinople/GeneralStateTests/stBugs",
   "LegacyTests/Constantinople/GeneralStateTests/stShift",
   "LegacyTests/Constantinople/GeneralStateTests/stCreate2",
   "LegacyTests/Constantinople/GeneralStateTests/stExtCodeHash",
   "LegacyTests/Constantinople/GeneralStateTests/stSStoreTest",
   "LegacyTests/Constantinople/GeneralStateTests/stAttackTest",
   "LegacyTests/Constantinople/GeneralStateTests/stMemoryStressTest",
   "LegacyTests/Constantinople/GeneralStateTests/stQuadraticComplexityTest",
   "LegacyTests/Constantinople/GeneralStateTests/stBadOpcode",
   "LegacyTests/Constantinople/GeneralStateTests/stArgsZeroOneBalance",
   "LegacyTests/Constantinople/GeneralStateTests/stEWASMTests",
   "LegacyTests/Constantinople/GeneralStateTests/stTimeConsuming",
   "LegacyTests/Constantinople/BCGeneralStateTests",
   "LegacyTests/Constantinople/BCGeneralStateTests/stCallCodes",
   "LegacyTests/Constantinople/BCGeneralStateTests/stCallCreateCallCodeTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stExample",
   "LegacyTests/Constantinople/BCGeneralStateTests/stInitCodeTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stLogTests",
   "LegacyTests/Constantinople/BCGeneralStateTests/stMemoryTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stPreCompiledContracts",
   "LegacyTests/Constantinople/BCGeneralStateTests/stPreCompiledContracts2",
   "LegacyTests/Constantinople/BCGeneralStateTests/stRandom",
   "LegacyTests/Constantinople/BCGeneralStateTests/stRandom2",
   "LegacyTests/Constantinople/BCGeneralStateTests/stRecursiveCreate",
   "LegacyTests/Constantinople/BCGeneralStateTests/stRefundTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stSolidityTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stSpecialTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stSystemOperationsTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stTransactionTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stTransitionTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stWalletTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stCallDelegateCodesCallCodeHomestead",
   "LegacyTests/Constantinople/BCGeneralStateTests/stCallDelegateCodesHomestead",
   "LegacyTests/Constantinople/BCGeneralStateTests/stHomesteadSpecific",
   "LegacyTests/Constantinople/BCGeneralStateTests/stDelegatecallTestHomestead",
   "LegacyTests/Constantinople/BCGeneralStateTests/stChangedEIP150",
   "LegacyTests/Constantinople/BCGeneralStateTests/stEIP150singleCodeGasPrices",
   "LegacyTests/Constantinople/BCGeneralStateTests/stMemExpandingEIP150Calls",
   "LegacyTests/Constantinople/BCGeneralStateTests/stEIP150Specific",
   "LegacyTests/Constantinople/BCGeneralStateTests/stEIP158Specific",
   "LegacyTests/Constantinople/BCGeneralStateTests/stNonZeroCallsTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stZeroCallsTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stZeroCallsRevert",
   "LegacyTests/Constantinople/BCGeneralStateTests/stCodeSizeLimit",
   "LegacyTests/Constantinople/BCGeneralStateTests/stCreateTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stRevertTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stStackTests",
   "LegacyTests/Constantinople/BCGeneralStateTests/stStaticCall",
   "LegacyTests/Constantinople/BCGeneralStateTests/stReturnDataTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stZeroKnowledge",
   "LegacyTests/Constantinople/BCGeneralStateTests/stZeroKnowledge2",
   "LegacyTests/Constantinople/BCGeneralStateTests/stCodeCopyTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stBugs",
   "LegacyTests/Constantinople/BCGeneralStateTests/stShift",
   "LegacyTests/Constantinople/BCGeneralStateTests/stCreate2",
   "LegacyTests/Constantinople/BCGeneralStateTests/stExtCodeHash",
   "LegacyTests/Constantinople/BCGeneralStateTests/stSStoreTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stAttackTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stMemoryStressTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stQuadraticComplexityTest",
   "LegacyTests/Constantinople/BCGeneralStateTests/stBadOpcode",
   "LegacyTests/Constantinople/BCGeneralStateTests/stArgsZeroOneBalance",
   "LegacyTests/Constantinople/BCGeneralStateTests/stTimeConsuming",
   "LegacyTests/Constantinople/BlockchainTests",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcBlockGasLimitTest",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcExploitTest",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcForkStressTest",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcGasPricerTest",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcMultiChainTest",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcRandomBlockhashTest",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcStateTests",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcTotalDifficultyTest",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcUncleSpecialTests",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcUncleTest",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcValidBlockTest",
   "LegacyTests/Constantinople/BlockchainTests/ValidBlocks/bcWalletTest",
   "LegacyTests/Constantinople/BlockchainTests/InvalidBlocks",
   "LegacyTests/Constantinople/BlockchainTests/InvalidBlocks/bcBlockGasLimitTest",
   "LegacyTests/Constantinople/BlockchainTests/InvalidBlocks/bcForgedTest",
   "LegacyTests/Constantinople/BlockchainTests/InvalidBlocks/bcInvalidHeaderTest",
   "LegacyTests/Constantinople/BlockchainTests/InvalidBlocks/bcMultiChainTest",
   "LegacyTests/Constantinople/BlockchainTests/InvalidBlocks/bcUncleHeaderValidity",
   "LegacyTests/Constantinople/BlockchainTests/InvalidBlocks/bcUncleSpecialTests",
   "LegacyTests/Constantinople/BlockchainTests/InvalidBlocks/bcUncleTest",
   "RlpTests",
   "RlpTests/invalidRLPtest",
   "RlpTests/rlptest",
   "RlpTests/rlpRandom",
   "GeneralStateTests",
   "GeneralStateTests/stCallCodes",
   "GeneralStateTests/stCallCreateCallCodeTest",
   "GeneralStateTests/stExample",
   "GeneralStateTests/stInitCodeTest",
   "GeneralStateTests/stLogTests",
   "GeneralStateTests/stMemoryTest",
   "GeneralStateTests/stPreCompiledContracts",
   "GeneralStateTests/stPreCompiledContracts2",
   "GeneralStateTests/stRandom",
   "GeneralStateTests/stRandom2",
   "GeneralStateTests/stRecursiveCreate",
   "GeneralStateTests/stRefundTest",
   "GeneralStateTests/stSolidityTest",
   "GeneralStateTests/stSpecialTest",
   "GeneralStateTests/stSystemOperationsTest",
   "GeneralStateTests/stTransactionTest",
   "GeneralStateTests/stTransitionTest",
   "GeneralStateTests/stWalletTest",
   "GeneralStateTests/stCallDelegateCodesCallCodeHomestead",
   "GeneralStateTests/stCallDelegateCodesHomestead",
   "GeneralStateTests/stHomesteadSpecific",
   "GeneralStateTests/stDelegatecallTestHomestead",
   "GeneralStateTests/stChangedEIP150",
   "GeneralStateTests/stEIP150singleCodeGasPrices",
   "GeneralStateTests/stMemExpandingEIP150Calls",
   "GeneralStateTests/stEIP150Specific",
   "GeneralStateTests/stEIP158Specific",
   "GeneralStateTests/stNonZeroCallsTest",
   "GeneralStateTests/stZeroCallsTest",
   "GeneralStateTests/stZeroCallsRevert",
   "GeneralStateTests/stCodeSizeLimit",
   "GeneralStateTests/stCreateTest",
   "GeneralStateTests/stRevertTest",
   "GeneralStateTests/stStackTests",
   "GeneralStateTests/stStaticCall",
   "GeneralStateTests/stReturnDataTest",
   "GeneralStateTests/stZeroKnowledge",
   "GeneralStateTests/stZeroKnowledge2",
   "GeneralStateTests/stCodeCopyTest",
   "GeneralStateTests/stBugs",
   "GeneralStateTests/stShift",
   "GeneralStateTests/stCreate2",
   "GeneralStateTests/stExtCodeHash",
   "GeneralStateTests/stSStoreTest",
   "GeneralStateTests/stAttackTest",
   "GeneralStateTests/stMemoryStressTest",
   "GeneralStateTests/stQuadraticComplexityTest",
   "GeneralStateTests/stBadOpcode",
   "GeneralStateTests/stArgsZeroOneBalance",
   "GeneralStateTests/stEWASMTests",
   "GeneralStateTests/stTimeConsuming",
   "GeneralStateTests/stChainId",
   "GeneralStateTests/stSLoadTest",
   "GeneralStateTests/stSelfBalance",
   "TransactionTests",
   "TransactionTests/ttAddress",
   "TransactionTests/ttData",
   "TransactionTests/ttGasLimit",
   "TransactionTests/ttGasPrice",
   "TransactionTests/ttNonce",
   "TransactionTests/ttRSValue",
   "TransactionTests/ttValue",
   "TransactionTests/ttVValue",
   "TransactionTests/ttSignature",
   "TransactionTests/ttWrongRLP",
   "TransactionTests/ttEIP2028",
   "VMTests",
   "VMTests/vmArithmeticTest",
   "VMTests/vmBitwiseLogicOperation",
   "VMTests/vmBlockInfoTest",
   "VMTests/vmEnvironmentalInfo",
   "VMTests/vmIOandFlowOperations",
   "VMTests/vmLogTest",
   "VMTests/vmPerformance",
   "VMTests/vmPushDupSwapTest",
   "VMTests/vmRandomTest",
   "VMTests/vmSha3Test",
   "VMTests/vmSystemOperations",
   "VMTests/vmTests",
   "LibSnark",
   "LibSnark/ecadd",
   "LibSnark/fieldPointInvalid",
   "LibSnark/invalid",
   "LibSnark/ecmul_add",
   "LibSnark/pairing",
   "LibSnark/pairingNullInput",
   "LibSnark/generateRandomPoints",
   "LibSnark/benchECADD",
   "LibSnark/benchECMULRand",
   "LibSnark/benchECMULWorstCase1",
   "LibSnark/benchECMULWorstCase2",
   "LibSnark/benchECMULIdentity",
   "LibSnark/ECMULuseCaseFromRopsten",
   "Crypto",
   "Crypto/KeyStore",
   "Crypto/KeyStore/basic_tests",
   "Crypto/KeyStore/import_key_from_file",
   "Crypto/KeyStore/import_secret",
   "Crypto/KeyStore/import_secret_bytesConstRef",
   "Crypto/KeyStore/wrong_password",
   "Crypto/KeyStore/recode",
   "Crypto/KeyStore/keyImport_PBKDF2SHA256",
   "Crypto/KeyStore/keyImport_Scrypt",
   "Crypto/KeyStore/keyImport__ScryptV2",
   "Crypto",
   "Crypto/devcrypto",
   "Crypto/devcrypto/sha3general",
   "Crypto/devcrypto/emptySHA3Types",
   "Crypto/devcrypto/pubkeyOfZero",
   "Crypto/devcrypto/KeyPairMix",
   "Crypto/devcrypto/keypairs",
   "Crypto/devcrypto/KeyPairVerifySecret",
   "Crypto/devcrypto/SignAndRecover",
   "Crypto/devcrypto/SignAndRecoverLoop",
   "Crypto/devcrypto/cryptopp_patch",
   "Crypto/devcrypto/verify_secert",
   "Crypto/devcrypto/verifyWithPublicCompressed",
   "Crypto/devcrypto/signAndVerify",
   "Crypto/devcrypto/compressedToUncompressed",
   "Crypto/devcrypto/common_encrypt_decrypt",
   "Crypto/devcrypto/sha3_norestart",
   "Crypto/devcrypto/ecies_kdf",
   "Crypto/devcrypto/ecdh_agree_invalid_pubkey",
   "Crypto/devcrypto/ecdh_agree_invalid_seckey",
   "Crypto/devcrypto/ecies_standard",
   "Crypto/devcrypto/ecies_sharedMacData",
   "Crypto/devcrypto/ecies_eckeypair",
   "Crypto/devcrypto/ecdhCryptopp",
   "Crypto/devcrypto/ecdhe",
   "Crypto/devcrypto/ecdhAgree",
   "Crypto/devcrypto/handshakeNew",
   "Crypto/devcrypto/ecies_aes128_ctr_unaligned",
   "Crypto/devcrypto/ecies_aes128_ctr",
   "Crypto/devcrypto/cryptopp_aes128_ctr",
   "Crypto/devcrypto/cryptopp_aes128_cbc",
   "Crypto/devcrypto/recoverVgt3",
   "Crypto/devcrypto/PerfSHA256_32",
   "Crypto/devcrypto/PerfSHA256_4000",
   "Crypto",
   "Crypto/Basic",
   "Crypto/Basic/hexPrefix_test",
   "Crypto/Basic/base64",
   "Crypto",
   "Crypto/Trie",
   "Crypto/Trie/fat_trie",
   "Crypto/Trie/hex_encoded_securetrie_test",
   "Crypto/Trie/trie_test_anyorder",
   "Crypto/Trie/trie_tests_ordered",
   "Crypto/Trie/moreTrieTests",
   "Crypto/Trie/trieLowerBound",
   "Crypto/Trie/hashedLowerBound",
   "Crypto/Trie/trieStess",
   "Crypto/Trie/triePerf",
   "PrecompiledTests",
   "PrecompiledTests/modexpFermatTheorem",
   "PrecompiledTests/modexpZeroBase",
   "PrecompiledTests/modexpExtraByteIgnored",
   "PrecompiledTests/modexpRightPadding",
   "PrecompiledTests/modexpMissingValues",
   "PrecompiledTests/modexpEmptyValue",
   "PrecompiledTests/modexpZeroPowerZero",
   "PrecompiledTests/modexpZeroPowerZeroModZero",
   "PrecompiledTests/modexpModLengthZero",
   "PrecompiledTests/modexpCostFermatTheorem",
   "PrecompiledTests/modexpCostTooLarge",
   "PrecompiledTests/modexpCostEmptyExponent",
   "PrecompiledTests/modexpCostZeroExponent",
   "PrecompiledTests/modexpCostApproximated",
   "PrecompiledTests/modexpCostApproximatedPartialByte",
   "PrecompiledTests/modexpCostApproximatedGhost",
   "PrecompiledTests/modexpCostMidRange",
   "PrecompiledTests/modexpCostHighRange",
   "PrecompiledTests/bench_ecrecover",
   "PrecompiledTests/bench_modexp",
   "PrecompiledTests/bench_bn256Add",
   "PrecompiledTests/bench_bn256ScalarMul",
   "PrecompiledTests/bench_bn256Pairing",
   "PrecompiledTests/ecaddCostBeforeIstanbul",
   "PrecompiledTests/ecaddCostIstanbul",
   "PrecompiledTests/ecmulBeforeIstanbul",
   "PrecompiledTests/ecmulCostIstanbul",
   "PrecompiledTests/ecpairingCost",
   "PrecompiledTests/blake2compression",
   "PrecompiledTests/blake2compressionFail",
   "PrecompiledTests/bench_blake2compression",
   "PrecompiledTests/bench_blake2compression_maxrounds",
   "SealEngineTests",
   "SealEngineTests/UnsignedTransactionTests",
   "SealEngineTests/UnsignedTransactionTests/UnsignedTransactionIsValidBeforeExperimental",
   "SealEngineTests/UnsignedTransactionTests/UnsignedTransactionIsValidInExperimental",
   "DifficultyTests",
   "DifficultyTests/difficultyTestsFrontier",
   "DifficultyTests/difficultyTestsRopsten",
   "DifficultyTests/difficultyTestsHomestead",
   "DifficultyTests/difficultyByzantium",
   "DifficultyTests/difficultyConstantinople",
   "DifficultyTests/difficultyMuirGlacier",
   "DifficultyTests/difficultyMuirGlacier_random",
   "DifficultyTests/difficultyMuirGlacier_random_to20M",
   "DifficultyTests/difficultyTestsMainNetwork",
   "DifficultyTests/difficultyTestsCustomMainNetwork",
   "DifficultyTests/basicDifficultyTest",
   "BlockSuite",
   "BlockSuite/FrontierBlockSuite",
   "BlockSuite/FrontierBlockSuite/bStates",
   "BlockSuite/FrontierBlockSuite/bCopyOperator",
   "BlockSuite/bGasPricer",
   "BlockSuite/bGetReceiptOverflow",
   "BlockSuite/ByzantiumBlockSuite",
   "BlockSuite/ByzantiumBlockSuite/bByzantiumBlockReward",
   "BlockSuite/ConstantinopleBlockSuite",
   "BlockSuite/ConstantinopleBlockSuite/bConstantinopleBlockReward",
   "BlockSuite/ExperimentalBlockSuite",
   "BlockSuite/ExperimentalBlockSuite/bBlockhashContractIsCreated",
   "BlockSuite/ExperimentalBlockSuite/bBlockhashContractIsUpdated",
   "BlockChainFrontierSuite",
   "BlockChainFrontierSuite/output",
   "BlockChainFrontierSuite/opendb",
   "BlockChainFrontierSuite/Mining_1_mineBlockWithTransaction",
   "BlockChainFrontierSuite/Mining_2_mineUncles",
   "BlockChainFrontierSuite/insertWithoutParent",
   "BlockChainMainNetworkSuite",
   "BlockChainMainNetworkSuite/Mining_5_BlockFutureTime",
   "BlockChainMainNetworkSuite/attemptImport",
   "BlockChainMainNetworkSuite/insert",
   "BlockChainMainNetworkSuite/insertException",
   "BlockChainMainNetworkSuite/rescue",
   "BlockChainMainNetworkSuite/updateStats",
   "BlockChainMainNetworkSuite/invalidJsonThrows",
   "BlockChainMainNetworkSuite/unknownFieldThrows",
   "BlockChainInsertTests",
   "BlockChainInsertTests/bcBasicInsert",
   "ClientBase",
   "ClientBase/blocks",
   "ClientTestSuite",
   "ClientTestSuite/ClientTest_setChainParamsAuthor",
   "ClientTestSuite/ClientTest_setChainParamsPrecompilesAreIgnored",
   "ExtVmExperimentalSuite",
   "ExtVmExperimentalSuite/BlockhashOutOfBoundsRetunsZero",
   "ExtVmExperimentalSuite/BlockhashBeforeExperimentalReliesOnLastHashes",
   "ExtVmExperimentalSuite/BlockhashDoesntNeedLastHashesInExperimental",
   "ExtVmExperimentalSuite/ScheduleAccordingToForkBeforeExperimental",
   "ExtVmExperimentalSuite/IstanbulScheduleForVersionZeroInExperimental",
   "ExtVmExperimentalSuite/ExperimentalScheduleForVersionOneInExperimental",
   "GasPricer",
   "GasPricer/trivialGasPricer",
   "GasPricer/basicGasPricerNoUpdate",
   "GasPricer/basicGasPricer_RPC_API_Test_Frontier",
   "GasPricer/basicGasPricer_RPC_API_Test_Homestead",
   "GasPricer/basicGasPricer_bcValidBlockTest",
   "GasPricer/basicGasPricer_bcUncleTest_Frontier",
   "GasPricer/basicGasPricer_bcUncleTest_Homestead",
   "GasPricer/basicGasPricer_bcUncleHeaderValidity_Frontier",
   "GasPricer/basicGasPricer_bcUncleHeaderValidity_Homestead",
   "GasPricer/basicGasPricer_notxs_frontier",
   "GasPricer/basicGasPricer_notxs_homestead",
   "GasPricer/basicGasPricer_highGasUsage_LowestPrio",
   "GasPricer/basicGasPricer_highGasUsage_LowPrio",
   "GasPricer/basicGasPricer_highGasUsage_MediumPrio",
   "GasPricer/basicGasPricer_highGasUsage_HighPrio",
   "GasPricer/basicGasPricer_highGasUsage_HighestPrio",
   "BasicTests",
   "BasicTests/emptySHA3Types",
   "BasicTests/genesis_tests",
   "SnapshotImporterSuite",
   "SnapshotImporterSuite/SnapshotImporterSuite_importChecksManifestVersion",
   "SnapshotImporterSuite/SnapshotImporterSuite_importNonsplittedAccount",
   "SnapshotImporterSuite/SnapshotImporterSuite_importSplittedAccount",
   "SnapshotImporterSuite/SnapshotImporterSuite_importAccountWithCode",
   "SnapshotImporterSuite/SnapshotImporterSuite_importAccountsWithEqualCode",
   "SnapshotImporterSuite/SnapshotImporterSuite_commitStateOnceEveryChunk",
   "SnapshotImporterSuite/SnapshotImporterSuite_importEmptyBlock",
   "SnapshotImporterSuite/SnapshotImporterSuite_importBlockWithTransactions",
   "StateUnitTests",
   "StateUnitTests/Basic",
   "StateUnitTests/LoadAccountCode",
   "StateUnitTests/RollbackSetCode",
   "StateUnitTests/SetEmptyCode",
   "StateUnitTests/CodeVersionZero",
   "StateUnitTests/SetEmptyCodeNonZeroVersion",
   "StateUnitTests/StateAddressRangeTests",
   "StateUnitTests/StateAddressRangeTests/addressesReturnsAllAddresses",
   "StateUnitTests/StateAddressRangeTests/addressesReturnsNoMoreThanRequested",
   "StateUnitTests/StateAddressRangeTests/addressesDoesntReturnDeletedInCache",
   "StateUnitTests/StateAddressRangeTests/addressesReturnsCreatedInCache",
   "libethereum",
   "libethereum/TransactionGasRequired",
   "libethereum/TransactionWithEmptyRecipient",
   "libethereum/TransactionNotReplayProtected",
   "libethereum/TransactionChainIDMax64Bit",
   "libethereum/TransactionChainIDBiggerThan64Bit",
   "libethereum/TransactionReplayProtected",
   "libethereum/ExecutionResultOutput",
   "libethereum/transactionExceptionOutput",
   "libethereum/toTransactionExceptionConvert",
   "libethereum/GettingSenderForUnsignedTransactionThrows",
   "libethereum/GettingSignatureForUnsignedTransactionThrows",
   "libethereum/StreamRLPWithSignatureForUnsignedTransactionThrows",
   "libethereum/CheckLowSForUnsignedTransactionThrows",
   "TransactionQueueSuite",
   "TransactionQueueSuite/TransactionEIP86",
   "TransactionQueueSuite/tqMaxNonce",
   "TransactionQueueSuite/tqPriority",
   "TransactionQueueSuite/tqFuture",
   "TransactionQueueSuite/tqLimits",
   "TransactionQueueSuite/tqImport",
   "TransactionQueueSuite/tqDrop",
   "TransactionQueueSuite/tqLimit",
   "TransactionQueueSuite/tqEqueue",
   "LegacyVMSuite",
   "LegacyVMSuite/LegacyVMCreate2Suite",
   "LegacyVMSuite/LegacyVMCreate2Suite/LegacyVMCreate2worksInConstantinople",
   "LegacyVMSuite/LegacyVMCreate2Suite/LegacyVMCreate2isInvalidBeforeConstantinople",
   "LegacyVMSuite/LegacyVMCreate2Suite/LegacyVMCreate2succeedsIfAddressHasEther",
   "LegacyVMSuite/LegacyVMCreate2Suite/LegacyVMCreate2doesntChangeContractIfAddressExists",
   "LegacyVMSuite/LegacyVMCreate2Suite/LegacyVMCreate2isForbiddenInStaticCall",
   "LegacyVMSuite/LegacyVMCreate2Suite/LegacyVMCreate2collisionWithNonEmptyStorage",
   "LegacyVMSuite/LegacyVMCreate2Suite/LegacyVMCreate2collisionWithNonEmptyStorageEmptyInitCode",
   "LegacyVMSuite/LegacyVMCreate2Suite/LegacyVMCreate2costIncludesInitCodeHashing",
   "LegacyVMSuite/LegacyVMExtcodehashSuite",
   "LegacyVMSuite/LegacyVMExtcodehashSuite/LegacyVMExtcodehashWorksInConstantinople",
   "LegacyVMSuite/LegacyVMExtcodehashSuite/LegacyVMExtcodehashHasCorrectCost",
   "LegacyVMSuite/LegacyVMExtcodehashSuite/LegacyVMExtcodehashIsInvalidConstantinople",
   "LegacyVMSuite/LegacyVMExtcodehashSuite/LegacyVMExtCodeHashOfNonContractAccount",
   "LegacyVMSuite/LegacyVMExtcodehashSuite/LegacyVMExtCodeHashOfNonExistentAccount",
   "LegacyVMSuite/LegacyVMExtcodehashSuite/LegacyVMExtCodeHashOfPrecomileZeroBalance",
   "LegacyVMSuite/LegacyVMExtcodehashSuite/LegacyVMExtCodeHashOfPrecomileNonZeroBalance",
   "LegacyVMSuite/LegacyVMExtcodehashSuite/LegacyVMExtcodehashIgnoresHigh12Bytes",
   "LegacyVMSuite/LegacyVMSstoreSuite",
   "LegacyVMSuite/LegacyVMSstoreSuite/LegacyVMSstoreConstantinople",
   "LegacyVMSuite/LegacyVMSstoreSuite/LegacyVMSstorePetersburg",
   "LegacyVMSuite/LegacyVMSstoreSuite/LegacyVMSstoreIstanbul",
   "LegacyVMSuite/LegacyVMSstoreSuite/LegacyVMSstoreBelowStipend",
   "LegacyVMSuite/LegacyVMChainIDSuite",
   "LegacyVMSuite/LegacyVMChainIDSuite/LegacyVMChainIDworksInIstanbul",
   "LegacyVMSuite/LegacyVMChainIDSuite/LegacyVMChainIDHasCorrectCost",
   "LegacyVMSuite/LegacyVMChainIDSuite/LegacyVMChainIDisInvalidBeforeIstanbul",
   "LegacyVMSuite/LegacyVMBalanceSuite",
   "LegacyVMSuite/LegacyVMBalanceSuite/LegacyVMSelfBalanceworksInIstanbul",
   "LegacyVMSuite/LegacyVMBalanceSuite/LegacyVMSelfBalanceHasCorrectCost",
   "LegacyVMSuite/LegacyVMBalanceSuite/LegacyVMBalanceHasCorrectCost",
   "LegacyVMSuite/LegacyVMBalanceSuite/LegacyVMSelfBalanceisInvalidBeforeIstanbul",
   "LegacyVMSuite/LegacyVMPrecompileCallSuite",
   "LegacyVMSuite/LegacyVMPrecompileCallSuite/LegacyVMCallHasCorrectCost",
   "LegacyVMSuite/LegacyVMPrecompileCallSuite/LegacyVMStaticCallCostEqualToCallBeforeEIP2046",
   "LegacyVMSuite/LegacyVMPrecompileCallSuite/LegacyVMStaticCallHasCorrectCostWithEIP2046",
   "LegacyVMSuite/LegacyVMCallSuite",
   "LegacyVMSuite/LegacyVMCallSuite/LegacyVMCallCorrectCost",
   "LegacyVMSuite/LegacyVMCallSuite/LegacyVMCallNewAccountCorrectCost",
   "LegacyVMSuite/LegacyVMCallSuite/LegacyVMCallSelfCorrectCost",
   "LegacyVMSuite/LegacyVMCallSuite/LegacyVMCallCodeCorrectCost",
   "LegacyVMSuite/LegacyVMCallSuite/LegacyVMCallCodeSelfCorrectCost",
   "LegacyVMSuite/LegacyVMCallSuite/LegacyVMStaticCallCorrectCost",
   "LegacyVMSuite/LegacyVMCallSuite/LegacyVMStaticCallSelfCorrectCost",
   "LegacyVMSuite/LegacyVMCallSuite/LegacyVMTestDelegateCallCorrectCost",
   "LegacyVMSuite/LegacyVMCallSuite/LegacyVMTestDelegateCallSelfCorrectCost",
   "AlethInterpreterSuite",
   "AlethInterpreterSuite/AlethInterpreterCreate2Suite",
   "AlethInterpreterSuite/AlethInterpreterCreate2Suite/AlethInterpreterCreate2worksInConstantinople",
   "AlethInterpreterSuite/AlethInterpreterCreate2Suite/AlethInterpreterCreate2isInvalidBeforeConstantinople",
   "AlethInterpreterSuite/AlethInterpreterCreate2Suite/AlethInterpreterCreate2succeedsIfAddressHasEther",
   "AlethInterpreterSuite/AlethInterpreterCreate2Suite/AlethInterpreterCreate2doesntChangeContractIfAddressExists",
   "AlethInterpreterSuite/AlethInterpreterCreate2Suite/AlethInterpreterCreate2isForbiddenInStaticCall",
   "AlethInterpreterSuite/AlethInterpreterCreate2Suite/AlethInterpreterCreate2collisionWithNonEmptyStorage",
   "AlethInterpreterSuite/AlethInterpreterCreate2Suite/AlethInterpreterCreate2collisionWithNonEmptyStorageEmptyInitCode",
   "AlethInterpreterSuite/AlethInterpreterExtcodehashSuite",
   "AlethInterpreterSuite/AlethInterpreterExtcodehashSuite/AlethInterpreterExtcodehashWorksInConstantinople",
   "AlethInterpreterSuite/AlethInterpreterExtcodehashSuite/AlethInterpreterExtcodehashIsInvalidConstantinople",
   "AlethInterpreterSuite/AlethInterpreterExtcodehashSuite/AlethInterpreterExtCodeHashOfNonContractAccount",
   "AlethInterpreterSuite/AlethInterpreterExtcodehashSuite/AlethInterpreterExtCodeHashOfNonExistentAccount",
   "AlethInterpreterSuite/AlethInterpreterExtcodehashSuite/AlethInterpreterExtCodeHashOfPrecomileZeroBalance",
   "AlethInterpreterSuite/AlethInterpreterExtcodehashSuite/AlethInterpreterExtCodeHashOfPrecomileNonZeroBalance",
   "AlethInterpreterSuite/AlethInterpreterExtcodehashSuite/AlethInterpreterExtCodeHashIgnoresHigh12Bytes",
   "AlethInterpreterSuite/AlethInterpreterSstoreSuite",
   "AlethInterpreterSuite/AlethInterpreterSstoreSuite/AlethInterpreterSstoreConstantinople",
   "AlethInterpreterSuite/AlethInterpreterSstoreSuite/AlethInterpreterSstorePetersburg",
   "AlethInterpreterSuite/AlethInterpreterSstoreSuite/AlethInterpreterSstoreIstanbul",
   "AlethInterpreterSuite/AlethInterpreterSstoreSuite/AlethInterpreterSstoreBelowStipend",
   "AlethInterpreterSuite/AlethInterpreterChainIDSuite",
   "AlethInterpreterSuite/AlethInterpreterChainIDSuite/AlethInterpreterChainIDworksInIstanbul",
   "AlethInterpreterSuite/AlethInterpreterChainIDSuite/AlethInterpreterChainIDisInvalidBeforeIstanbul",
   "AlethInterpreterSuite/AlethInterpreterBalanceSuite",
   "AlethInterpreterSuite/AlethInterpreterBalanceSuite/AlethInterpreterSelfBalanceworksInIstanbul",
   "AlethInterpreterSuite/AlethInterpreterBalanceSuite/AlethInterpreterSelfBalanceisInvalidBeforeIstanbul",
   "network",
   "network/net",
   "network/net/isIPAddressType",
   "network/net/neighboursPacketLength",
   "network/net/neighboursPacket",
   "network/net/kademlia",
   "network/net/hostNoCapsNoTcpListener",
   "network/net/udpOnce",
   "network/net/noteActiveNodeAppendsNewNode",
   "network/net/noteActiveNodeUpdatesKnownNode",
   "network/net/noteActiveNodeEvictsTheNodeWhenBucketIsFull",
   "network/net/nearestNodeEntriesOneNode",
   "network/net/nearestNodeEntriesOneDistantNode",
   "network/net/nearestNodeEntriesManyNodes",
   "network/net/unexpectedPong",
   "network/net/invalidPong",
   "network/net/validPong",
   "network/net/pongWithChangedNodeID",
   "network/net/pingTimeout",
   "network/net/invalidPing",
   "network/net/neighboursSentAfterFindNode",
   "network/net/unexpectedFindNode",
   "network/net/evictionWithOldNodeAnswering",
   "network/net/evictionWithOldNodeDropped",
   "network/net/pingFromLocalhost",
   "network/net/addSelf",
   "network/net/findNodeIsSentAfterPong",
   "network/net/pingNotSentAfterPongForKnownNode",
   "network/net/addNodePingsNodeOnlyOnce",
   "network/net/validENRRequest",
   "network/net/changingHostEndpoint",
   "network/net/packetsWithChangedEndpointSuite",
   "network/net/packetsWithChangedEndpointSuite/addNode",
   "network/net/packetsWithChangedEndpointSuite/findNode",
   "network/net/packetsWithChangedEndpointSuite/neighbours",
   "network/netTypes",
   "network/netTypes/unspecifiedNode",
   "network/netTypes/nodeTableReturnsUnspecifiedNode",
   "libp2p",
   "libp2p/p2p",
   "libp2p/p2p/host",
   "libp2p/p2p/attemptNetworkRestart",
   "libp2p/p2p/networkConfig",
   "libp2p/p2p/registerCapabilityAfterNetworkStart",
   "libp2p/p2p/saveNodes",
   "libp2p/p2p/saveENR",
   "libp2p/p2p/updateENRfromConfig",
   "libp2p/p2pPeer",
   "libp2p/p2pPeer/requirePeer",
   "libp2p/p2pPeer/requirePeerNoNetwork",
   "libp2p/peerTypes",
   "libp2p/peerTypes/emptySharedPeer",
   "BlockChainTestSuite",
   "BlockChainTestSuite/fillingExpectationOnMultipleNetworks",
   "BlockChainTestSuite/fillingExpectationOnSingleNetwork",
   "BlockChainTestSuite/fillingWithWrongExpectation",
   "StateTestTestSuite",
   "StateTestTestSuite/singlenetOnMissingPostState",
   "TestHelperSuite",
   "TestHelperSuite/TranslateNetworks",
   "TestHelperSuite/TranslateNetworks/translateNetworks_gteIstanbul",
   "TestHelperSuite/TranslateNetworks/translateNetworks_gtConstantinople",
   "TestHelperSuite/TranslateNetworks/translateNetworks_gtHomestead",
   "TestHelperSuite/TranslateNetworks/translateNetworks_geHomestead",
   "TestHelperSuite/TranslateNetworks/translateNetworks_ltHomestead",
   "TestHelperSuite/TranslateNetworks/translateNetworks_ltTest",
   "TestHelperSuite/TranslateNetworks/translateNetworks_leHomestead",
   "TestHelperSuite/TranslateNetworks/translateNetworks_leFrontier",
   "TestHelperSuite/TestHelper",
   "TestHelperSuite/TestHelper/levenshteinDistance_similar",
   "TestHelperSuite/TestHelper/levenshteinDistance_similar2",
   "TestHelperSuite/TestHelper/levenshteinDistance_similar3",
   "TestHelperSuite/TestHelper/levenshteinDistance_similar4",
   "TestHelperSuite/TestHelper/levenshteinDistance_AgtB",
   "TestHelperSuite/TestHelper/levenshteinDistance_AgtB2",
   "TestHelperSuite/TestHelper/levenshteinDistance_BgtA",
   "TestHelperSuite/TestHelper/levenshteinDistance_BgtA2",
   "TestHelperSuite/TestHelper/levenshteinDistance_different",
   "TestHelperSuite/TestHelper/getTestSuggestions",
   "TestHelperSuite/TestHelper/getTestSuggestions2",
   "ClientTests",
   "ClientTests/Personal",
   "JsonRpcSuite",
   "JsonRpcSuite/jsonrpc_gasPrice",
   "JsonRpcSuite/jsonrpc_isListening",
   "JsonRpcSuite/jsonrpc_accounts",
   "JsonRpcSuite/jsonrpc_number",
   "JsonRpcSuite/jsonrpc_peerCount",
   "JsonRpcSuite/jsonrpc_setMining",
   "JsonRpcSuite/jsonrpc_stateAt",
   "JsonRpcSuite/eth_coinbase",
   "JsonRpcSuite/eth_sendTransaction",
   "JsonRpcSuite/eth_sendMultipleTransactions",
   "JsonRpcSuite/eth_sendRawTransaction_validTransaction",
   "JsonRpcSuite/eth_sendRawTransaction_errorZeroBalance",
   "JsonRpcSuite/eth_sendRawTransaction_errorInvalidNonce",
   "JsonRpcSuite/eth_sendRawTransaction_errorInsufficientGas",
   "JsonRpcSuite/eth_signTransaction",
   "JsonRpcSuite/simple_contract",
   "JsonRpcSuite/contract_storage",
   "JsonRpcSuite/eth_getCode_emptyAccount",
   "JsonRpcSuite/web3_sha3",
   "JsonRpcSuite/debugAccountRangeFinalBlockState",
   "JsonRpcSuite/debugStorageRangeAtFinalBlockState",
   "JsonRpcSuite/debugTraceTransaction",
   "JsonRpcSuite/adminEthVmTrace",
   "JsonRpcSuite/test_setChainParams",
   "JsonRpcSuite/test_importRawBlock",
   "JsonRpcSuite/test_importRawBlockFailsForInvalidHeader",
   "JsonRpcSuite/test_importRawBlockFailsForInvalidBlockBody",
   "JsonRpcSuite/call_from_parameter",

};
